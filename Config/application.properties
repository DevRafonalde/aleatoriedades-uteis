server.port=8603
spring.resources.add-mappings=true

# SQL Server
spring.datasource.url=jdbc:sqlserver://SERVIDOR:PORTA;databaseName=NOMEBANCO;encrypt=false;trustServerCertificate=true;integratedSecurity=false;
spring.datasource.username=
spring.datasource.password=
spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServerDialect
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.ddl-auto=none

spring.thymeleaf.cache=false

# MySQL
# Aqui está um exemplo de configuração `application.properties` para um projeto Spring Boot com Java 24 que se conecta ao MySQL, sem que o Hibernate modifique automaticamente as tabelas e ignorando case sensitive:

# Configurações de conexão ao MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/seu_banco_de_dados?createDatabaseIfNotExist=false&useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false&sessionVariables=sql_mode='IGNORE_SPACE'
spring.datasource.username=seu_usuario
spring.datasource.password=sua_senha
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Configuração do Hibernate
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.open-in-view=false

# Configuração para ignorar case sensitive nas consultas JPA
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl

# Configuração para mostrar SQL no console (opcional - útil para debug)
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Configuração específica para Java 24
spring.datasource.hikari.auto-commit=false

# Explicação das configurações:

# 1. `spring.jpa.hibernate.ddl-auto=none` - Esta é a configuração crucial que impede o Hibernate de modificar o esquema do banco de dados.

# 2. `spring.jpa.hibernate.naming.physical-strategy` e `spring.jpa.hibernate.naming.implicit-strategy` - Estas configurações ajudam a manter o mapeamento exato entre entidades Java e tabelas no banco de dados, respeitando maiúsculas e minúsculas.

# 3. O parâmetro `sessionVariables=sql_mode='IGNORE_SPACE'` na URL de conexão ajuda a tornar as consultas menos sensíveis a case.

# 4. `spring.datasource.hikari.auto-commit=false` - Ajuste específico para melhor desempenho com Java 24.

# Lembre-se de substituir `seu_banco_de_dados`, `seu_usuario` e `sua_senha` pelos valores corretos do seu ambiente.
